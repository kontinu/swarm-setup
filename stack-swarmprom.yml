version: "3.7"

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "1m"
  # driver: "gelf"
  # options:
  #   gelf-address: "udp://127.0.0.1:5000"

networks:
  net: {}
  proxy:
    external: true

volumes:
    prometheus:
      driver: rexray/dobs
      driver_opts:
        size: 10
    grafana:
      driver: rexray/dobs
      driver_opts:
        size: 1
    alertmanager:
      driver: rexray/dobs
      driver_opts:
        size: 1

configs:
  dockerd_config:
    file: ./swarmprom/dockerd-exporter/Caddyfile
  node_rules:
    file: ./swarmprom/prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./swarmprom/prometheus/rules/swarm_task.rules.yml

services:
  dockerd-exporter:
    <<: *default-opts
    image: stefanprodan/caddy
    networks:
      - net
    environment:
      - DOCKER_GWBRIDGE_IP=172.18.0.1
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  cadvisor:
    <<: *default-opts
    image: google/cadvisor
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  grafana:
    <<: *default-opts
    image: stefanprodan/swarmprom-grafana:5.3.4
    networks:
      - net
      - proxy
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.http.routers.grafana.rule: Host(`grafana.${MY_DOMAIN:-kontinu.local}`)
        traefik.http.routers.grafana.entryPoints: websecure
        traefik.http.routers.grafana.service: grafana
        traefik.http.services.grafana.loadbalancer.server.port: 3000
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  alertmanager:
    <<: *default-opts
    image: stefanprodan/swarmprom-alertmanager:v0.14.0
    networks:
      - net
      - proxy
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.http.routers.alertmanager.rule: Host(`alertmanager.${MY_DOMAIN:-kontinu.local}`)
        traefik.http.routers.alertmanager.entryPoints: websecure
        traefik.http.routers.alertmanager.service: alertmanager
        traefik.http.routers.alertmanager.middlewares: alertmanager-auth
        traefik.http.services.alertmanager.loadbalancer.server.port: 9093
        traefik.http.middlewares.alertmanager-auth.basicauth.users: ${AM_USER:-admin}:${AM_PASSWORD:-$2y$05$oZcj4FgdSFEYNCH0EH/3Vu7Hp72gkvEadHzMsDhGFkbvS/ZrKMKfK}
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  unsee:
    <<: *default-opts
    image: cloudflare/unsee:v0.8.0
    networks:
      - net
      - proxy
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.http.routers.unsee.rule: Host(`unsee.${MY_DOMAIN:-kontinu.local}`)
        traefik.http.routers.unsee.entryPoints: websecure
        traefik.http.routers.unsee.service: unsee
        traefik.http.routers.unsee.middlewares: unsee-auth
        traefik.http.services.unsee.loadbalancer.server.port: 9094
        traefik.http.middlewares.unsee-auth.basicauth.users: ${UNSEE_USER:-admin}:${UNSEE_PASSWORD:-$2y$05$oZcj4FgdSFEYNCH0EH/3Vu7Hp72gkvEadHzMsDhGFkbvS/ZrKMKfK}
        # - com.df.users=${ADMIN_USER:-admin}:${ADMIN_PASSWORD:-admin}


  node-exporter:
    <<: *default-opts
    image: stefanprodan/swarmprom-node-exporter:v0.16.0
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      # no collectors are explicitely enabled here, because the defaults are just fine,
      # see https://github.com/prometheus/node_exporter
      # disable ipvs collector because it barfs the node-exporter logs full with errors on my centos 7 vm's
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  prometheus:
    <<: *default-opts
    image: stefanprodan/swarmprom-prometheus:v2.5.0
    networks:
      - net
      - proxy
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=24h'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        traefik.http.routers.prom.rule: Host(`prom.${MY_DOMAIN:-kontinu.local}`)
        traefik.http.routers.prom.entryPoints: websecure
        traefik.http.routers.prom.service: prom
        traefik.http.routers.prom.middlewares: prom-auth
        traefik.http.services.prom.loadbalancer.server.port: 9090
        traefik.http.middlewares.prom-auth.basicauth.users: ${KIBANA_USER:-admin}:${KIBANA_PASSWORD:-$2y$05$oZcj4FgdSFEYNCH0EH/3Vu7Hp72gkvEadHzMsDhGFkbvS/ZrKMKfK}
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M